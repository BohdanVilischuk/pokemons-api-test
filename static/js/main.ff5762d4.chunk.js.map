{"version":3,"sources":["components/title.jsx","helpers/constants/index.js","components/image.jsx","components/type.jsx","components/pokemon-box.jsx","components/pokemon-preview.jsx","components/filter.jsx","components/load-more.jsx","App.js","helpers/functions/index.js","helpers/api/index.js","reportWebVitals.js","index.js"],"names":["Title","className","API","Image","src","alt","Type","type","PokemonBox","name","image","id","stats","pokemonHandler","weight","moves","onClick","map","item","index","PokemonPreview","closeBox","ability","value","length","Filter","select","selects","handleChange","onChange","label","LoadMore","loadMore","App","useState","allPokemons","setAllPokemons","singlePokemon","setSinglePokemon","setSelect","page","setPage","box","setBox","filter","self","findIndex","i","useEffect","callback","promises","url","push","axios","get","then","response","data","Promise","all","results","pokemon","result","sprites","types","join","split","height","stat","base_stat","getPokemons","highlightPokemonHandler","items","includes","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff5762d4.chunk.js","sourcesContent":["const Title = () => {\n    return (\n        <h1 className=\"title\">\n            Pokedex\n        </h1>\n    );\n}\n\nexport default Title;\n","export const API = {\n    BACKEND_BASE_URL: 'https://pokeapi.co/api/v2',\n    BACKEND_BASE_POKEMON_URL: 'https://pokeapi.co/api/v2/pokemon/'\n}","const Image = ({src, alt, className}) => {\n  return (\n    <picture className={className}>\n      <img src={src} alt={alt}/>\n    </picture>\n  )\n}\nexport default Image;","const Type = ({type}) => {\n  return (\n      <div className={`pokemon-type ${type}`}>\n        {type}\n      </div>\n  )\n}\nexport default Type;","import Image from \"./image\";\nimport Type from \"./type\";\n\nconst PokemonBox = ({name, image, type, id, stats, pokemonHandler, weight, moves}) => {\n    return (\n        <div className=\"pokemon-box\" onClick={() => pokemonHandler(name, id, stats, weight, moves, image, type)}>\n            <Image src={image} alt='pokemon'/>\n            <div className='box-content'>\n               <h4>\n                   {name}\n               </h4>\n            </div>\n            <div className='pokemon-types'>\n                {type.map((item, index) => (\n                    <Type key={index} type={item}/>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default PokemonBox;\n","import Image from \"./image\";\nimport Type from \"./type\";\n\nconst PokemonPreview = ({stats, name, id, weight, moves, type, image, closeBox}) => {\n  return (\n    <div className={name ? 'pokemon-preview' : 'preview-hidden'}>\n      <div className='single-pokemon__wrapper'>\n        <div onClick={closeBox} className='close'></div>\n        <Image src={image} alt='single-pokemon' className='single-pokemon__image'/>\n        <div className='single-pokemon__header'>\n          <h4 className='single-pokemon__title'>\n            {name}\n          </h4>\n          <span className='single-pokemon__id'>\n            ##{id}\n          </span>\n        </div>\n        <div className='single-pokemon__types'>\n          <h4>Types:</h4>\n          {type.map((type, index) => (\n            <Type type={type} key={index * 2.1} />\n          ))}\n        </div>\n        {stats && (\n          <div className='single-pokemon__content'>\n            <div className='single-pokemon__ability-group'>\n              <div className='single-pokemon__ability-name'>\n                {stats && stats.name.map((ability, index) =>\n                  <div key={index * 2.223} className='single-pokemon__item'>{ability}:</div>\n                )}\n              </div>\n              <div className='single-pokemon__ability-value'>\n                {stats && stats.value.map((value, index) =>\n                  <div key={index * 1.256} className='single-pokemon__item'>{value}</div>\n                )}\n              </div>\n            </div>\n            <div className='single-pokemon__ability-group'>\n              <div className='single-pokemon__item'>\n                Weight:\n              </div>\n              <div className='single-pokemon__item'>\n                {weight}\n              </div>\n            </div>\n            <div className='single-pokemon__ability-group'>\n              <div className='single-pokemon__item'>Total moves:</div>\n              <div className='single-pokemon__item'>{moves.length}</div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PokemonPreview;\n","const Filter = ({select, selects, handleChange}) => {\n    return (\n        <div className='pokemon-filter'>\n            <select onChange={handleChange} value={select.value}>\n                {selects && selects.map(({label, value}, index) => {\n                    return <option key={index} value={value}>{label}</option>\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport default Filter;\n","const LoadMore = ({loadMore}) => {\n  return (\n    <div className='load-more' onClick={loadMore}>\n      Load more\n    </div>\n  )\n}\nexport default LoadMore;","import './App.scss';\nimport Title from './components/title';\nimport {useEffect, useState} from 'react';\nimport {getPokemons} from './helpers/api';\nimport PokemonBox from './components/pokemon-box';\nimport {mapSelectItems} from './helpers/functions';\nimport PokemonPreview from './components/pokemon-preview';\nimport Filter from \"./components/filter\";\nimport LoadMore from \"./components/load-more\";\n\nexport const App = () => {\n  const [allPokemons, setAllPokemons] = useState([]);\n  const [singlePokemon, setSinglePokemon] = useState(null);\n  const [select, setSelect] = useState({value: 'all'});\n  const [page, setPage] = useState(12);\n  const [box, setBox] = useState(true);\n\n  const loadMore = () => {\n    setPage(page => page + 12);\n  }\n  const options = [{\n    id: 0,\n    label: 'all',\n    value: 'all'\n  }]\n\n  const selects = [...options, ...mapSelectItems(allPokemons)];\n\n  useEffect(() => {\n    getPokemons(page, setAllPokemons);\n  }, [page]);\n  const openBox = () => {\n    setBox(true)\n  }\n  const closeBox = () => {\n    setBox(false)\n  }\n  const highlightPokemonHandler = (name, id, stats, weight, moves, image, type) => {\n    openBox()\n    setSinglePokemon({\n      name: name,\n      id: id,\n      stats: stats,\n      weight: weight,\n      moves: moves,\n      image: image,\n      type: type\n    });\n  };\n\n  const handleSelectChange = (e) => {\n    setSelect({value: e.target.value});\n  };\n\n  const items =\n    select.value === 'all' ? allPokemons : allPokemons.filter(({type}) => {\n      return type[0].includes(select.value);\n    });\n\n  return (\n    <div className='container'>\n      <Title/>\n      <Filter selects={selects} select={select} handleChange={handleSelectChange}/>\n      <div className='pokemons'>\n        <div className='content'>\n          <div className='all-pokemons'>\n            {items && items.map(({type, image, name, weight, id, stats, moves}, index) => {\n                return <PokemonBox\n                  pokemonHandler={highlightPokemonHandler}\n                  image={image}\n                  type={type}\n                  name={name}\n                  weight={weight}\n                  id={id}\n                  moves={moves}\n                  stats={stats}\n                  key={index}\n                />\n              }\n            )}\n          </div>\n          <LoadMore loadMore={loadMore}/>\n        </div>\n        <div className='pokemon-preview__container'>\n          {singlePokemon && box && (\n            <PokemonPreview\n              closeBox={closeBox}\n              weight={singlePokemon.weight}\n              name={singlePokemon.name}\n              id={singlePokemon.id}\n              moves={singlePokemon.moves}\n              stats={singlePokemon.stats}\n              image={singlePokemon.image}\n              type={singlePokemon.type}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","export const mapSelectItems = (arr) => {\n    const items = arr.map(({type}, index) => ({\n        id: index + 1,\n        label: type[0],\n        value: type[0]\n    }));\n    return items.filter((item, index, self) =>\n        index === self.findIndex((i) => (\n            i.value === item.value && i.label === item.label\n        ))\n    );\n}","import {API} from \"../constants\";\nimport axios from 'axios'\n\nexport const getPokemons = (page, callback) => {\n    const promises = [];\n    for (let i = 1; i <= page; i++) {\n        const url = API.BACKEND_BASE_POKEMON_URL + i;\n        promises.push(axios.get(url).then(response => response.data));\n    }\n    Promise.all(promises).then((results) => {\n        const pokemon = results.map((result) => ({\n            name: result.name,\n            image: result.sprites['front_default'],\n            type: result.types.map((type) => type.type.name).join(' ').split(' '),\n            id: result.id,\n            weight: result.weight,\n            height: result.height,\n            moves: result.moves,\n            stats: {\n                name: result.stats.map(stat => stat.stat.name),\n                value: result.stats.map(stat => stat.base_stat),\n            }\n        }));\n        callback(pokemon)\n    });\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}